{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oneil\\\\Desktop\\\\Planner 2\\\\frontend\\\\src\\\\components\\\\TaskList.js\";\nimport React from 'react';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onToggle,\n  onEdit,\n  onDelete\n}) => {\n  if (tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#666'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No tasks found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your first task to get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  const getPriorityClass = priority => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return 'priority-high';\n      case 'medium':\n        return 'priority-medium';\n      case 'low':\n        return 'priority-low';\n      default:\n        return 'priority-medium';\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    try {\n      return format(new Date(dateString), 'MMM dd, yyyy');\n    } catch (error) {\n      return dateString;\n    }\n  };\n  const getRecurrenceText = task => {\n    if (!task.is_recurring) return '';\n    const interval = task.recurrence_interval;\n    const type = task.recurrence_type;\n    if (type === 'daily') {\n      return interval === 1 ? 'Daily' : `Every ${interval} days`;\n    } else if (type === 'weekly') {\n      return interval === 1 ? 'Weekly' : `Every ${interval} weeks`;\n    } else if (type === 'monthly') {\n      return interval === 1 ? 'Monthly' : `Every ${interval} months`;\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-item ${task.completed ? 'completed' : ''} ${task.is_recurring ? 'recurring-task' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => onToggle(task.id),\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), task.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: '5px',\n              color: '#666',\n              fontSize: '14px'\n            },\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `priority-badge ${getPriorityClass(task.priority)}`,\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 16\n          }, this), task.is_recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#667eea',\n              fontWeight: '500'\n            },\n            children: [\"\\uD83D\\uDD04 \", getRecurrenceText(task)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 18\n          }, this), task.due_date && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Due: \", formatDate(task.due_date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 18\n          }, this), task.next_due && task.is_recurring && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Next: \", formatDate(task.next_due)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => onEdit(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => {\n            if (window.confirm('Are you sure you want to delete this task?')) {\n              onDelete(task.id);\n            }\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","format","jsxDEV","_jsxDEV","TaskList","tasks","onToggle","onEdit","onDelete","length","style","textAlign","padding","color","children","fileName","_jsxFileName","lineNumber","columnNumber","getPriorityClass","priority","toLowerCase","formatDate","dateString","Date","error","getRecurrenceText","task","is_recurring","interval","recurrence_interval","type","recurrence_type","map","className","completed","checked","onChange","id","marginRight","title","description","marginTop","fontSize","category","fontWeight","due_date","next_due","onClick","window","confirm","_c","$RefreshReg$"],"sources":["C:/Users/oneil/Desktop/Planner 2/frontend/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\r\nimport { format } from 'date-fns';\r\n\r\nconst TaskList = ({ tasks, onToggle, onEdit, onDelete }) => {\r\n  if (tasks.length === 0) {\r\n    return (\r\n      <div style={{ textAlign: 'center', padding: '40px', color: '#666' }}>\r\n        <h3>No tasks found</h3>\r\n        <p>Create your first task to get started!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getPriorityClass = (priority) => {\r\n    switch (priority.toLowerCase()) {\r\n      case 'high':\r\n        return 'priority-high';\r\n      case 'medium':\r\n        return 'priority-medium';\r\n      case 'low':\r\n        return 'priority-low';\r\n      default:\r\n        return 'priority-medium';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    try {\r\n      return format(new Date(dateString), 'MMM dd, yyyy');\r\n    } catch (error) {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const getRecurrenceText = (task) => {\r\n    if (!task.is_recurring) return '';\r\n    \r\n    const interval = task.recurrence_interval;\r\n    const type = task.recurrence_type;\r\n    \r\n    if (type === 'daily') {\r\n      return interval === 1 ? 'Daily' : `Every ${interval} days`;\r\n    } else if (type === 'weekly') {\r\n      return interval === 1 ? 'Weekly' : `Every ${interval} weeks`;\r\n    } else if (type === 'monthly') {\r\n      return interval === 1 ? 'Monthly' : `Every ${interval} months`;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {tasks.map(task => (\r\n        <div \r\n          key={task.id} \r\n          className={`task-item ${task.completed ? 'completed' : ''} ${task.is_recurring ? 'recurring-task' : ''}`}\r\n        >\r\n          <div className=\"task-header\">\r\n            <div>\r\n              <div className=\"task-title\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={task.completed}\r\n                  onChange={() => onToggle(task.id)}\r\n                  style={{ marginRight: '10px' }}\r\n                />\r\n                {task.title}\r\n              </div>\r\n              {task.description && (\r\n                <p style={{ marginTop: '5px', color: '#666', fontSize: '14px' }}>\r\n                  {task.description}\r\n                </p>\r\n              )}\r\n            </div>\r\n                         <div className=\"task-meta\">\r\n               <span className={`priority-badge ${getPriorityClass(task.priority)}`}>\r\n                 {task.priority}\r\n               </span>\r\n               <span>{task.category}</span>\r\n               {task.is_recurring && (\r\n                 <span style={{ color: '#667eea', fontWeight: '500' }}>\r\n                   🔄 {getRecurrenceText(task)}\r\n                 </span>\r\n               )}\r\n               {task.due_date && (\r\n                 <span>Due: {formatDate(task.due_date)}</span>\r\n               )}\r\n               {task.next_due && task.is_recurring && (\r\n                 <span>Next: {formatDate(task.next_due)}</span>\r\n               )}\r\n             </div>\r\n          </div>\r\n          \r\n          <div className=\"task-actions\">\r\n            <button \r\n              className=\"btn btn-secondary\"\r\n              onClick={() => onEdit(task)}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button \r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                if (window.confirm('Are you sure you want to delete this task?')) {\r\n                  onDelete(task.id);\r\n                }\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}